name: tf-destroy

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Select 'plan' to create/upload a destroy plan; 'apply' to execute a previously uploaded destroy plan."
        required: true
        type: choice
        default: plan
        options:
          - plan
          - apply
      destroy_commit_sha:
        description: "When mode=apply, which commit's destroy plan to use (defaults to current SHA if blank)."
        required: false
        default: ""
      confirm:
        description: "Type DESTROY to confirm when running mode=apply."
        required: false
        default: ""

permissions:
  contents: read

env:
  AWS_REGION: us-east-1
  PLAN_BUCKET: plan-bucket-zaf
  # Folder prefix style: org/repo#sha  (same convention as your plan/apply flow)
  PLAN_PREFIX: ${{ github.repository }}#${{ github.sha }}
  # Keep destroy plans separate from normal plans
  DESTROY_SUBPATH: destroy

jobs:
  tf-destroy:
    runs-on: ubuntu-latest
    # Optional: protect with an environment (requires reviewer approval in GitHub)
    # environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform 1.13.1
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -LO "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Terraform Init
        run: terraform init -input=false

      # ----------------------
      # MODE = plan
      # ----------------------
      - name: Create & Upload Destroy Plan
        if: ${{ github.event.inputs.mode == 'plan' }}
        env:
          S3_PREFIX: ${{ env.PLAN_PREFIX }}
          DESTROY_PLAN_KEY: ${{ env.DESTROY_SUBPATH }}/destroy.tfplan
          DESTROY_HASH_KEY: ${{ env.DESTROY_SUBPATH }}/destroy.tfplan.sha256
        run: |
          echo "==> terraform validate"
          terraform validate

          echo "==> terraform plan -destroy"
          terraform plan -destroy -input=false -out=destroy.tfplan

          echo "==> checksum"
          sha256sum destroy.tfplan | awk '{print $1}' > destroy.tfplan.sha256

          echo "==> upload to s3://${PLAN_BUCKET}/${S3_PREFIX}/${DESTROY_PLAN_KEY}"
          aws s3 cp destroy.tfplan "s3://${PLAN_BUCKET}/${S3_PREFIX}/${DESTROY_PLAN_KEY}" --sse AES256
          aws s3 cp destroy.tfplan.sha256 "s3://${PLAN_BUCKET}/${S3_PREFIX}/${DESTROY_HASH_KEY}" --sse AES256

          echo "Uploaded:"
          echo "  s3://${PLAN_BUCKET}/${S3_PREFIX}/${DESTROY_PLAN_KEY}"
          echo "  s3://${PLAN_BUCKET}/${S3_PREFIX}/${DESTROY_HASH_KEY}"

      # ----------------------
      # MODE = apply  (manual only, with confirmation)
      # ----------------------
      - name: Verify Manual Confirmation
        if: ${{ github.event.inputs.mode == 'apply' }}
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "DESTROY" ]; then
            echo "Refusing to proceed: you must type DESTROY in the 'confirm' input."
            exit 1
          fi
          echo "Confirmation OK."

      - name: Resolve Commit for Destroy Plan
        if: ${{ github.event.inputs.mode == 'apply' }}
        id: commit
        run: |
          if [ -n "${{ github.event.inputs.destroy_commit_sha }}" ]; then
            echo "sha=${{ github.event.inputs.destroy_commit_sha }}" >> $GITHUB_OUTPUT
          else
            echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Download & Verify Destroy Plan
        if: ${{ github.event.inputs.mode == 'apply' }}
        env:
          USE_PREFIX: ${{ github.repository }}#${{ steps.commit.outputs.sha }}
          DESTROY_PLAN_KEY: ${{ env.DESTROY_SUBPATH }}/destroy.tfplan
          DESTROY_HASH_KEY: ${{ env.DESTROY_SUBPATH }}/destroy.tfplan.sha256
        run: |
          echo "==> downloading from s3://${PLAN_BUCKET}/${USE_PREFIX}/${DESTROY_PLAN_KEY}"
          aws s3 cp "s3://${PLAN_BUCKET}/${USE_PREFIX}/${DESTROY_PLAN_KEY}" ./destroy.tfplan
          aws s3 cp "s3://${PLAN_BUCKET}/${USE_PREFIX}/${DESTROY_HASH_KEY}" ./destroy.tfplan.sha256

          echo "==> verifying checksum"
          DOWN_HASH=$(sha256sum destroy.tfplan | awk '{print $1}')
          EXP_HASH=$(cat destroy.tfplan.sha256)
          if [ "$DOWN_HASH" != "$EXP_HASH" ]; then
            echo "Checksum mismatch! expected=$EXP_HASH got=$DOWN_HASH"
            exit 1
          fi
          echo "Checksum OK."

      - name: Apply Destroy Plan
        if: ${{ github.event.inputs.mode == 'apply' }}
        run: |
          echo "==> terraform apply (destroy plan)"
          terraform apply -input=false destroy.tfplan
